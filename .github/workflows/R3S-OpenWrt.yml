name: R3S-OpenWrt

on:
  workflow_dispatch:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        grep 'model name' /proc/cpuinfo

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 512
        root-reserve-mb: 4608
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - name: Checkout
      uses: actions/checkout@main

    - name: Clone Repos and Copy Config
      run: |
        git clone https://github.com/QiuSimons/YAOF.git
        cd YAOF
        git clone https://github.com/V1Eerie/OPconfigR3s.git
        cp -r ./OPconfigR3s/S* ./

    - name: Install Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo /bin/bash -c "$(curl -sL https://git.io/vokNn)"
        sudo -E apt-fast -y -qq install asciidoc bash bcc bin86 binutils bison bzip2 clang-15 llvm-15 clang llvm file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gzip help2man intltool libboost-dev libelf-dev libncurses-dev libncurses5-dev libssl-dev libthread-queue-any-perl libusb-dev libxml-parser-perl make patch perl-modules python3-dev python3-pip python3-pyelftools python3-setuptools rsync sharutils swig time unzip util-linux wget xsltproc zlib1g-dev zip zstd
        sudo -E apt-fast -y -qq install dos2unix dwarves quilt npm jq
        sudo -E npm install -g pnpm
        pip3 install --user -U pylibfdt --break-system-packages
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions'
        sudo -E git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto

    - name: Prepare Mixedwrt
      working-directory: ./YAOF
      run: |
        sudo chown -R runner:runner .
        cp -r ./SCRIPTS/R3S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh

    - name: Prepare Package
      working-directory: ./YAOF/openwrt
      run: |
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_target_only.sh
        /bin/bash 04_remove_upx.sh

    - name: Copy Config Seed
      working-directory: ./YAOF/openwrt
      run: cp -rf ../SEED/R3S/config.seed .config

    - name: Convert Translation
      working-directory: ./YAOF/openwrt
      run: /bin/bash 03_convert_translation.sh

    - name: Create ACL for LuCI
      working-directory: ./YAOF/openwrt
      run: /bin/bash 05_create_acl_for_luci.sh -a

    - name: Fix Permissions
      working-directory: ./YAOF/openwrt
      run: |
        sudo chmod -R 755 ./08_fix_permissions.sh
        /bin/bash 08_fix_permissions.sh

    - name: Make Defconfig
      working-directory: ./YAOF/openwrt
      run: make defconfig

    - name: Set Build Info
      working-directory: ./YAOF/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}-3566" >> $GITHUB_ENV
        latest_release="$(curl -s https://github.com/openwrt/openwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][4-9]/p' | sed -n 1p | sed 's/.tar.gz//g' | sed 's/v//g')"
        echo "latest_release=${latest_release}" >> $GITHUB_ENV

    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/YAOF/openwrt

    - name: Download Packages
      working-directory: ./YAOF/openwrt
      run: make download -j50

    - name: Compile
      working-directory: ./YAOF/openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        make -j$(($(nproc) + 1)) package/network/utils/nftables/refresh V=s
        IGNORE_ERRORS=1 make -j$(($(nproc) + 1))

    - name: If Error
      if: steps.compileopenwrt.outcome == 'failure'
      working-directory: ./YAOF/openwrt
      run: |
        cat .config
        echo '===================== REBUILD (V=s) ====================='
        make -j1 V=s

    - name: Organize Artifacts
      run: |
        mkdir -p artifact/
        mv YAOF/openwrt/bin/targets/*/*/*sysupgrade.img* artifact/ || true
        cd artifact/
        ls -Ahl
        gzip -d *.gz || true
        gzip --best *.img || true
        ls -Ahl
        sha256sum *sysupgrade.img | tee R3S-$(date +%Y-%m-%d)-${{ env.latest_release }}.sha256sum
        zip R3S-$(date +%Y-%m-%d)-${{ env.latest_release }}.zip *img*
        ls -Ahl

    - name: Upload Release
      uses: ncipollo/release-action@main
      with:
        name: OpenWRT-${{ env.latest_release }}
        allowUpdates: true
        prerelease: false
        tag: ${{ env.latest_release }}
        commit: "24.10"
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./artifact/*.zip

    - name: Disk Space After
      run: df -h
